###################################################
# 15-323 Spring 14
# Rishabh Alaap Singh (rasingh)
#
# scheduler.srp
#
# Functions that control MIDI. This file maintains
# all the scheduler code and plays all sounds. 
###################################################
require "debug"
debug_stack_print = t
require "sched"
require "midi-io"

PLAY = 0
wait_period = 0.5 # Default starting


NOTE_ARRAY = [60,61,62,63,64,65]

def activity(play, p)
    display "activity", play, the_sched.time, time_get(), p
        
    var buf_len = len(NOTE_ARRAY)
    var i = p % buf_len


    play_sounds(i, 0)

    if play != PLAY
        return

    display "--"
    p = p + 1
    play_sounds(i, 1)
    

    the_sched.cause(wait_period, nil, 'activity', play, p)


# Physically plays the sounds using midi-io
def play_sounds(i, on)
    display "play_sounds", on

    if on == 1
        midi_out.note_on(0x90, NOTE_ARRAY[i], 100)
    else
        # end the previous note
        if i == 0
            i = len(NOTE_ARRAY) - 1
        else
            i = i-1
        midi_out.note_on(0x90, NOTE_ARRAY[i], 0)



# Changes the waiting period of the drums
def changeTempo(tempo)
    vtsched.start_use()
    vtsched.set_period(tempoToPeriod(tempo))
    vtsched.finish_use()
    display "SYSTEM: Tempo Changed to ", tempo

def togglePlay()
    if PLAY == 0
        PLAY = 1
        print "===============PLAYING==============="
        start_playing(wait_period)
    else
        PLAY = 0
        print "===============STOPPED==============="


def modGain(delta)
    GAIN = delta

def timer_callback()
    rtsched.poll(time_get())
    osc_server_poll()

def start_playing(wait_period)
    vtsched.start_use()
    vtsched.cause(wait_period,nil,'activity', PLAY, 0)
    the_sched.finish_use()

def setup_scheduler()
    sched_init()
    midi_out.start(0)
    rtsched.time_offset = time_get()
    vtsched.set_period(wait_period) 
    wxs_timer_start(2, 'timer_callback')
    display "SYSTEM: Scheduler has been set up"
